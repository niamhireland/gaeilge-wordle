{"ast":null,"code":"var _jsxFileName = \"/Users/niamhwalsh/Documents/GitHub/gaeilge-wordle/src/App.js\",\n  _s = $RefreshSig$();\nimport './index.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport GameBoard from './components/GameBoard';\nimport Keyboard from './components/Keyboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TARGET_WORD = '√ÅR√ÅN';\nconst WORD_LENGTH = TARGET_WORD.length;\nfunction App() {\n  _s();\n  const [guesses, setGuesses] = useState([]);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [darkMode, setDarkMode] = useState(() => {\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const appRef = useRef(null);\n  useEffect(() => {\n    var _appRef$current;\n    (_appRef$current = appRef.current) === null || _appRef$current === void 0 ? void 0 : _appRef$current.focus();\n  }, []);\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n  const handleKeyDown = e => {\n    const key = e.key.toUpperCase();\n    if (key === 'ENTER' && currentGuess.length === WORD_LENGTH) {\n      setGuesses([...guesses, currentGuess]);\n      setCurrentGuess('');\n    } else if (key === 'BACKSPACE') {\n      setCurrentGuess(currentGuess.slice(0, -1));\n    } else if (/^[A-Z√Å√â√ç√ì√ö]$/.test(key) && currentGuess.length < WORD_LENGTH) {\n      setCurrentGuess(currentGuess + key);\n    }\n  };\n  const handleScreenKeyPress = key => {\n    const upperKey = key.toUpperCase();\n    if (upperKey === 'ENTER' && currentGuess.length === WORD_LENGTH) {\n      setGuesses([...guesses, currentGuess]);\n      setCurrentGuess('');\n    } else if (upperKey === 'BACKSPACE') {\n      setCurrentGuess(currentGuess.slice(0, -1));\n    } else if (/^[A-Z√Å√â√ç√ì√ö]$/.test(upperKey) && currentGuess.length < WORD_LENGTH) {\n      setCurrentGuess(currentGuess + upperKey);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    tabIndex: 0,\n    ref: appRef,\n    onKeyDown: handleKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Focail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDarkMode(!darkMode),\n      children: darkMode ? 'üåû Light Mode' : 'üåô Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n      guesses: [...guesses, currentGuess],\n      wordLength: WORD_LENGTH\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n      onKeyPress: handleScreenKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oeGeY+x0brcudakWYG3cpANo/t0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GameBoard","Keyboard","jsxDEV","_jsxDEV","TARGET_WORD","WORD_LENGTH","length","App","_s","guesses","setGuesses","currentGuess","setCurrentGuess","darkMode","setDarkMode","localStorage","getItem","appRef","_appRef$current","current","focus","document","body","classList","toggle","setItem","handleKeyDown","e","key","toUpperCase","slice","test","handleScreenKeyPress","upperKey","className","tabIndex","ref","onKeyDown","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","wordLength","onKeyPress","_c","$RefreshReg$"],"sources":["/Users/niamhwalsh/Documents/GitHub/gaeilge-wordle/src/App.js"],"sourcesContent":["import './index.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport GameBoard from './components/GameBoard';\nimport Keyboard from './components/Keyboard';\n\nconst TARGET_WORD = '√ÅR√ÅN';\nconst WORD_LENGTH = TARGET_WORD.length;\n\nfunction App() {\n  const [guesses, setGuesses] = useState([]);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [darkMode, setDarkMode] = useState(() => {\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const appRef = useRef(null);\n\n  useEffect(() => {\n    appRef.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n\n  const handleKeyDown = (e) => {\n    const key = e.key.toUpperCase();\n    if (key === 'ENTER' && currentGuess.length === WORD_LENGTH) {\n      setGuesses([...guesses, currentGuess]);\n      setCurrentGuess('');\n    } else if (key === 'BACKSPACE') {\n      setCurrentGuess(currentGuess.slice(0, -1));\n    } else if (/^[A-Z√Å√â√ç√ì√ö]$/.test(key) && currentGuess.length < WORD_LENGTH) {\n      setCurrentGuess(currentGuess + key);\n    }\n  };\n\n  const handleScreenKeyPress = (key) => {\n    const upperKey = key.toUpperCase();\n    if (upperKey === 'ENTER' && currentGuess.length === WORD_LENGTH) {\n      setGuesses([...guesses, currentGuess]);\n      setCurrentGuess('');\n    } else if (upperKey === 'BACKSPACE') {\n      setCurrentGuess(currentGuess.slice(0, -1));\n    } else if (/^[A-Z√Å√â√ç√ì√ö]$/.test(upperKey) && currentGuess.length < WORD_LENGTH) {\n      setCurrentGuess(currentGuess + upperKey);\n    }\n  };\n\n  return (\n    <div\n      className=\"app\"\n      tabIndex={0}\n      ref={appRef}\n      onKeyDown={handleKeyDown}\n    >\n      <h1>Focail</h1>\n\n      <button onClick={() => setDarkMode(!darkMode)}>\n        {darkMode ? 'üåû Light Mode' : 'üåô Dark Mode'}\n      </button>\n\n      <GameBoard guesses={[...guesses, currentGuess]} wordLength={WORD_LENGTH} />\n      <Keyboard onKeyPress={handleScreenKeyPress} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}